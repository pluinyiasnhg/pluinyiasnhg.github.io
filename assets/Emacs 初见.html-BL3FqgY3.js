import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as c,b as t,d as i,e as a,o as s}from"./app-BAhMc8yK.js";const l={};function p(n,e){return s(),d("div",null,[e[0]||(e[0]=c("h1",{id:"前言",tabindex:"-1"},[c("a",{class:"header-anchor",href:"#前言"},[c("span",null,"前言")])],-1)),e[1]||(e[1]=c("p",null,[a("一直想学习 Emacs，但是苦于无法入门。有看过一步步配置出自己的 Emacs 的教程，包括博客教程和视频教程，但学着很不得劲。最后的水平也就记住了退出和保存的快捷键 "),c("code",null,"C-x C-c"),a(" 和 "),c("code",null,"C-x C-s"),a(" 。")],-1)),t(" more "),e[2]||(e[2]=i('<p>这次打算主要看 <a href="https://wiki.archlinux.org/title/Emacs" target="_blank" rel="noopener noreferrer">Arch Wiki 上的 Emacs 百科</a>进行学习，辅以 Emacs 官方文档。</p><h1 id="emacs-内置教程" tabindex="-1"><a class="header-anchor" href="#emacs-内置教程"><span>Emacs 内置教程</span></a></h1><p>我不喜欢 Emacs 的图形化界面，感觉像十年前的前端样式，“不是我喜欢的 Emacs ，直接拒绝”。在终端中输入 <code>emacs -nw</code> ，emacs 就在终端中启动了。</p><p>先过一遍 Emacs 内置的快速指南，快捷键是 <code>C-h t</code> 。如果像我一样不习惯阅读英文，用命令 <code>M-x help-with-tutorial-spec-language</code>，选择一份中文文档进行学习。这里的 <code>M</code> 是 Meta 键，通常是键盘上的 <code>Alt</code> 。</p><figure><img src="https://vip.123pan.cn/1844935313/obsidian/20250918084530894.png" alt="Emacs 快速指南" tabindex="0" loading="lazy"><figcaption>Emacs 快速指南</figcaption></figure><p>回显区：屏幕最下面一行，用于显示输入的命令。</p><p>状态栏：回显区正上方的一行，显示 Emacs 的状态和你正在编辑的文字的一些信息。</p><h2 id="光标移动" tabindex="-1"><a class="header-anchor" href="#光标移动"><span>光标移动</span></a></h2><p>我的习惯是，Emacs 的上下左右移动快捷键要学，因为之前 Vim 的中英文切换让我十分狼狈，以至于养成了“每次输入完中文都会主动切换回英文”的习惯。</p><p>简而言之就是利用 Vim 的模式，插入模式用 Emacs 进行光标移动，普通模式下则用 Vim 移动。</p><p>微操：</p><ul><li>上移：<code>C-p</code> ，下移：<code>C-n</code> 。p 记作 previous ，n 记作 next</li><li>左移：<code>C-b</code> ，右移：<code>C-f</code> 。b 记作 back，f 记作 forward</li></ul><p>个人觉得用找个单词记忆快捷键会简单些。接下来的前移后移和居中，适合浏览代码。</p><ul><li>前移一屏：<code>C-v</code>，后移一屏：<code>M-v</code></li><li>光标所在行居中：<code>C-l</code> 。多按几次，就是“中-上-下”循环</li></ul><p>Meta 系列组合键用来操作“由语言定义的单位（比如词、句子、段落）”，而 Ctrl 系列组合键用来操作“与语言无关的基本单位（比如字符、行等等）”。比如：</p><ul><li><code>C-a</code> 和 <code>C-e</code> 可以将光标移动到“一行”的头部和尾部</li><li><code>M-a</code> 和 <code>M-e</code> 则是将光标移动到“一句”的头部和尾部</li><li><code>M-b</code> ：向左移动一个词， <code>M-f</code> ：向右移动一个词</li></ul><h2 id="取消命令" tabindex="-1"><a class="header-anchor" href="#取消命令"><span>取消命令</span></a></h2><p>命令输入一半，输错了或者不想用了，可以用 <code>C-g</code> 中断。特别的，<code>ESC</code> + <code>C-g</code> 会显示组合键未定义，建议多按两次 <code>ESC</code> 取消。</p><h2 id="删除移除" tabindex="-1"><a class="header-anchor" href="#删除移除"><span>删除移除</span></a></h2><ul><li>删除光标前一字符 ：<code>&lt;DEL&gt;</code> ，删除光标后一字符：<code>C-d</code></li><li>移除光标前一单词 ：<code>M-&lt;DEL&gt;</code> ，移除光标后一词：<code>M-d</code></li><li>移除从光标到“行尾”间的字符 ：<code>C-k</code> ，移除从光标到“句尾”间的字符 ：<code>M-k</code></li></ul><p>删除是 delete，移除是 kill。区别在于：被 kill 的文本被 Emacs 记录下来，后续可以重新插入被移除的文本，类似平时用的剪贴功能，Emacs 称之为 yank。</p><p>只消除一个字符或者只消除空白的命令，无法用 yank (<code>C-y</code>) 插入被移除的字符或空白，比如 <code>&lt;DEL&gt;</code> 和 <code>C-d</code> 。但这也不是绝对的，这两条命令有前缀参数时，就变成了”移除“命令。</p><p>C-y 可以召回最近一次移除的内容；<code>M-y</code> 可以召回再前一次被移除的内容，再按一次 <code>M-y</code> 又可以召回再上一次的内容……连续使用 <code>M-y</code> 会回到起始点。</p><h2 id="撤销" tabindex="-1"><a class="header-anchor" href="#撤销"><span>撤销</span></a></h2><p><code>C-/</code> 和 <code>C--</code> 都是撤销一条命令，不包括没有改变文字的命令，比如光标移动和滚动。</p><p>撤销（undo）可以恢复删除和移除的文本；移除文本+召回（yank）效果等同“剪贴”。</p><h2 id="文件" tabindex="-1"><a class="header-anchor" href="#文件"><span>文件</span></a></h2><ul><li>打开文件：<code>C-x C-f</code> ，f 记作 file</li><li>保存文件：<code>C-x C-s</code> ，s 记作 save</li></ul><p>打开一个不存在的文件，等同于创建一个新文件。</p><p>保存文件时，Emacs 会为文件备份。关闭备份的方法：<code>M-x customize-variable &lt;Return&gt; make-backup-files &lt;Return&gt;</code> 。</p><h2 id="缓冲区" tabindex="-1"><a class="header-anchor" href="#缓冲区"><span>缓冲区</span></a></h2><ul><li>列出缓冲区：<code>C-x C-b</code> ，b 记作 buffer</li><li>切换缓冲区：<code>C-x b</code></li><li>保存所有缓冲区：<code>C-x s</code></li></ul><p>每个已打开的文件都是一个缓冲区。因此切换缓冲区，等同于打开一个已经打开的文件。</p><p>C-x C-s 一次只能给一个文件（缓冲区）保存，如果有多个文件（缓冲区）需要保存，可以用 <code>C-x s</code> 。</p><h2 id="快捷键拓展" tabindex="-1"><a class="header-anchor" href="#快捷键拓展"><span>快捷键拓展</span></a></h2><p>Emacs 的命令就像天上的星星，数也数不清。把它们都对应到 Ctrl 和 Meta 组合键上显然是不可能的。Emacs 用扩展命令来解决这个问题，扩展命令有两种风格：</p><ul><li>字符扩展：<code>C-x</code>。 C-x 之后输入另一个字符或者组合键</li><li>命令名扩展：<code>M-x</code>。 M-x 之后输入一个命令名</li></ul><h2 id="挂起-emacs" tabindex="-1"><a class="header-anchor" href="#挂起-emacs"><span>挂起 Emacs</span></a></h2><p>如果需要临时从 Emacs 回到终端，可以不用保存和退出，选择挂起 Emacs：</p><ul><li>挂起 Emacs：<code>C-z</code></li><li>返回 Emacs：<code>fg</code> 或 <code>%emacs</code></li></ul><h2 id="自动保存" tabindex="-1"><a class="header-anchor" href="#自动保存"><span>自动保存</span></a></h2><p>Emacs 会定期将正在编辑的文件写入一个“自动保存”文件中。自动保存文件的文件名的头尾各有一个“#”字符，比如正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫“#hello.c#”。这个文件会在正常存盘之后被 Emacs 删除。</p><p>打开原来的文件（注意不是自动保存文件）然后输入 <code>M-x recover file</code> 来恢复自动保存文件。</p><h2 id="搜索" tabindex="-1"><a class="header-anchor" href="#搜索"><span>搜索</span></a></h2><ul><li>向前搜索：<code>C-s</code></li><li>向后搜索：<code>C-r</code></li></ul><p>以向前搜索为例，C-s 后接想找的字符串，匹配到结果后，继续按 C-s ，光标会跳转到下一个匹配的字符串。此时，按 <code>&lt;return&gt;</code> ，光标停留在匹配字符串；按 <code>C-g</code> ，光标返回初始位置。</p><h2 id="多窗格" tabindex="-1"><a class="header-anchor" href="#多窗格"><span>多窗格</span></a></h2><ul><li>只保留光标所在的窗格：<code>C-x 1</code></li><li>向下分割出窗格：<code>C-x 2</code></li><li>向右分割出窗格：<code>C-x 3</code></li><li>切换窗格：<code>C-x o</code> ，o 记作 other</li></ul><p>不管是向下分，还是向右分，光标还是位于原来的窗格。切换窗格时，多按几次 C-x o，就能循环遍历所有窗格。</p><p>光标可以不切换到新窗格，就能在新窗格中滚动页面。当前窗格滚动快捷键是 <code>C-v</code> 和 <code>M-v</code> ，新窗格是 <code>C-M-v</code> 和 <code>C-M-S-v</code> 。这两个快捷键很重要，平时翻阅帮助文档时候，就是创建一个新窗格，在新窗格内查看文档。</p><p>与窗口的区别：终端中的 Emacs 只有一个窗口，即当前的终端窗口；GUI 界面的 Emacs 可以创建多个窗口。每个窗口有单独的菜单栏、滚动条，就像平时的应用多开。</p><p>⚠️需要注意的是，Emacs 的原文文档中 windows 指代的是本文的窗格，frame 指代的是本文的窗口。注意区分。</p><h2 id="递归编辑" tabindex="-1"><a class="header-anchor" href="#递归编辑"><span>递归编辑</span></a></h2><p>递归编辑状态由位于状态栏的方括号所指示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到 <code>[(Fundamental)]</code>，而不是 <code>(Fundamental)</code> 。</p><p>不能用 <code>C-g</code> 退出递归编辑，而应该用 <code>ESC ESC ESC</code> 。这条命令还可以关闭多余的窗格。</p><h2 id="帮助文档" tabindex="-1"><a class="header-anchor" href="#帮助文档"><span>帮助文档</span></a></h2><ul><li><code>C-h c</code> ：查看快捷键。在状态栏显示命令的简要说明</li><li><code>C-h k</code> ：查看快捷键。在下方窗格中显示命令的完整文档</li><li><code>C-h x</code> ：解释一个命令。需要输入命令名</li><li><code>C-h v</code> ：查看 Emacs 变量</li><li><code>C-h a</code> ：相关命令搜索</li><li><code>C-h i</code> ：阅读手册（info），主要参考文档</li><li><code>C-h ?</code> ：info 的使用指南</li></ul><p><code>C-h c</code> 和 <code>C-h k</code> 根据快捷键确定；<code>C-h x</code> 根据命令名确定。</p><p>相关命令搜索是指 Emacs 根据输入的关键词，罗列出所有包含关键词的命令。</p><h2 id="软件仓库" tabindex="-1"><a class="header-anchor" href="#软件仓库"><span>软件仓库</span></a></h2><p><code>M-x list-packages</code> 可浏览所有可安装的软件包。这个命令显示的界面中可以安装和卸载软件包，以及查看软件包的简介。</p><h1 id="尾声" tabindex="-1"><a class="header-anchor" href="#尾声"><span>尾声</span></a></h1><p>把 Emacs 内置的快速指南过了一遍，GNU Emacs 官网上的文档没来得及看。接下来我要去看看 Emacs 的一款主题 Spacemacs。</p>',63))])}const m=o(l,[["render",p]]),C=JSON.parse('{"path":"/tools/note/Emacs%20%E5%88%9D%E8%A7%81.html","title":"Emacs 初见","lang":"zh-CN","frontmatter":{"title":"Emacs 初见","date":"2025-09-18T00:00:00.000Z","tags":["编辑器","Emacs"],"category":["代码效率"],"description":"一直想学习 Emacs，但是苦于无法入门。有看过一步步配置出自己的 Emacs 的教程，包括博客教程和视频教程，但学着很不得劲。最后的水平也就记住了退出和保存的快捷键 C-x C-c 和 C-x C-s 。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Emacs 初见\\",\\"image\\":[\\"https://vip.123pan.cn/1844935313/obsidian/20250918084530894.png\\"],\\"datePublished\\":\\"2025-09-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-19T11:32:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"庸碌无常\\",\\"url\\":\\"https://pluinyiasnhg.top\\"}]}"],["meta",{"property":"og:url","content":"https://pluinyiasnhg.top/tools/note/Emacs%20%E5%88%9D%E8%A7%81.html"}],["meta",{"property":"og:site_name","content":"庸碌无常的博客"}],["meta",{"property":"og:title","content":"Emacs 初见"}],["meta",{"property":"og:description","content":"一直想学习 Emacs，但是苦于无法入门。有看过一步步配置出自己的 Emacs 的教程，包括博客教程和视频教程，但学着很不得劲。最后的水平也就记住了退出和保存的快捷键 C-x C-c 和 C-x C-s 。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vip.123pan.cn/1844935313/obsidian/20250918084530894.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-19T11:32:55.000Z"}],["meta",{"property":"article:tag","content":"Emacs"}],["meta",{"property":"article:tag","content":"编辑器"}],["meta",{"property":"article:published_time","content":"2025-09-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-19T11:32:55.000Z"}]]},"git":{"createdTime":1758189976000,"updatedTime":1758281575000,"contributors":[{"name":"pluinyiasnhg","username":"pluinyiasnhg","email":"pluinyiasnhg@gmail.com","commits":2,"url":"https://github.com/pluinyiasnhg"}]},"readingTime":{"minutes":7.08,"words":2124},"filePathRelative":"tools/note/Emacs 初见.md","excerpt":"\\n<p>一直想学习 Emacs，但是苦于无法入门。有看过一步步配置出自己的 Emacs 的教程，包括博客教程和视频教程，但学着很不得劲。最后的水平也就记住了退出和保存的快捷键 <code>C-x C-c</code> 和 <code>C-x C-s</code> 。</p>\\n","autoDesc":true}');export{m as comp,C as data};
