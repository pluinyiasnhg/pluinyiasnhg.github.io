import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,b as t,d as l,e,o as h}from"./app-Bso_Kttm.js";const r={};function d(c,s){return h(),n("div",null,[s[0]||(s[0]=i("h1",{id:"前言",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#前言"},[i("span",null,"前言")])],-1)),s[1]||(s[1]=i("p",null,[e("学习 Rahul 的 "),i("a",{href:"https://www.rahuljuliato.com/posts/compiling_emacs_30_1",target:"_blank",rel:"noopener noreferrer"},"Compiling Emacs 30.1 from the source on Debian"),e(" 教程，尝试在本地编译 Emacs 30.2 。")],-1)),t(" more "),s[2]||(s[2]=l(`<p>起因是在 <a href="https://www.gnu.org/savannah-checkouts/gnu/emacs/emacs.html#Releases" target="_blank" rel="noopener noreferrer">Emacs Release</a> 上看到今年8月更新的 30.2 版本，再看看 ubuntu 上用 apt 安装的 29.4 版本，两个版本之间隔着一个 30.1。在此之前，也就是今天早上的时候，我还是在看 Emacs 的 lsp-mode，lsp-mode 集成了许多插件，其中之一就是 which-key。在该插件的 Github 主页上，我注意到该插件已经停止更新了，插件计划在 Emacs 30 合并到官方项目中。</p><p>于是，我就非常想体验下新版本的 Emacs，Ubuntu 官方源的更新遥遥无期，只能在本地编译适合 Ubuntu 的软件包了。</p><h1 id="下载源代码" tabindex="-1"><a class="header-anchor" href="#下载源代码"><span>下载源代码</span></a></h1><p>创建并进入一个新目录，该目录用于存放 Emacs 源代码：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/emacs_build</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emacs_build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>从 Emacs 官方提供的<a href="https://gnu.mirror.constant.com/emacs/" target="_blank" rel="noopener noreferrer">镜像源</a>下载当前最新版本 emacs-30.2 ：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gnu.mirror.constant.com/emacs/emacs-30.2.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gnu.mirror.constant.com/emacs/emacs-30.2.tar.gz.sig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>验证 <code>.tar.gz</code> 压缩包的检验和：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用 sha1num 或 sha256num 校验</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sha256sum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emacs-30.2.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>验证压缩包签名，如果验证成功，则会看到形如 <code>Good signature from &quot;Eli Zaretskii &lt;eliz@gnu.org&gt;&quot; [unknown]</code> 的输出：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gpg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --verify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emacs-30.2.tar.gz.sig</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emacs-30.2.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>解压 tarball 压缩包：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xvfz</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emacs-30.2.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 <code>tar --help | grep -E &quot;^ *-(x|v|f|z)&quot;</code> 查询上述选项的作用：</p><ul><li><code>-x, --extract, --get</code> 表示从档案（archive）中提取文件</li><li><code>-v, --verbose</code> 表示解压文件时列出所有文件名</li><li><code>-f, --file=ARCHIVE</code> 使用档案文件或设备 ARCHIVE</li><li><code>-z, --gzip, --gunzip, --ungzip</code> 通过 gzip 过滤档案</li></ul><blockquote><p>通常所说的压缩文件，可以分为存档和压缩两个步骤，尽管实际使用中感觉不出，似乎是一步到位的。以 <code>.tar.gz</code> 文件为例，<code>.tar</code> 即存档文件，<code>.gz</code> 即压缩文件。</p></blockquote><h1 id="进行配置" tabindex="-1"><a class="header-anchor" href="#进行配置"><span>进行配置</span></a></h1><p>有关源代码如何本地编译，可以参阅 <code>emacs-30.2/INSTALL</code> 文件。该文件给出了一个有近900行的教程。</p><p>运行 <code>./configure --help</code> 查看所有 Emacs 选项：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./configure</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --with-native-compilation=aot\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-tree-sitter\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-gif\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-png\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-jpeg\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-rsvg\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-tiff\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-imagemagick\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-x-toolkit=gtk3\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">            --with-mailutils</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>aot</code> 会编译所有 Lisp 代码，可能需要 <strong>很长时间</strong>（特别是在老旧机器上），如果不想等待太久，可以改用 <code>--with-native-compilation</code>（即 JIT 模式）。</p><p>在为 Emacs 选择 GUI 时候，要考虑系统是 X11 还是 Wayland。<code>--with-pgtk</code> 中的 pgtk 全称为 pure-GTK，它就不适合我在用的 X11 。如果非要在 X11 上安装了 GTK，那么启动 Emacs GUI 时，Emacs 会如下警告：</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>You are trying to run Emacs configured with the &quot;pure-GTK&quot; interface under the X Window System. That configuration is unsupported and will lead to sporadic crashes during transfer of large selection data. It will also lead to various problems with keyboard input.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我在配置过程中遇到最多的问题是缺少各种编译所需的软件包。基本上只要按照报错信息，上网查询缺失包的 apt 安装方式，在本地安装后就没问题了。这个过程可能需要反复多次，每次编译失败都用 <code>rm -rf</code> 删除 <code>config.status</code>，避免因编译失败而损坏文件。</p><p>注意，配置过程中如果需要安装 <code>libgccjit</code> 包，那么这个包必须与 <code>gcc</code> 的版本一致，比如我笔记本上的 <code>gcc</code> 版本是 13.3，对应的 <code>libgccjit</code> 包是 <code>libgccjit-13-dev</code> 。</p><h1 id="编译和安装" tabindex="-1"><a class="header-anchor" href="#编译和安装"><span>编译和安装</span></a></h1><p>编译和安装过程中可能出现“权限不够”的问题，用超级用户身份重新执行命令就行，即 <code>sudo !!</code> 。</p><ul><li><code>make clean</code> 用于清理上次编译的结果</li><li><code>make -j8</code> 表示用8个作业进行编译，不指定数字时默认作业数无限制。如果在配置阶段设置了 Emacs 本地编译器为 <code>aot</code>，那么编译过程中会把 <code>.el</code> 文件编译成 <code>.eln</code>。我使用下来，感觉启动时间快了许多</li><li><code>./src/emacs --version</code> 正式安装之前，检查编译得到的软件版本是否正确</li></ul><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j8</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./src/emacs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开始安装：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">emacs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>卸载的方式同安装一样简单，但是需要保留编译 Emacs 时的目录 <code>~/emacs-build</code> ：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-zsh"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uninstall</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="尾声" tabindex="-1"><a class="header-anchor" href="#尾声"><span>尾声</span></a></h1><p>在我反复编译、安装、卸载 Emacs 过程中，每次打开新安装的 Emacs，确认软件是否正常运行，我都要等待 Spacemacs 安装 200个左右的包。</p><p>假如我在一台云服务器上使用 Spacemacs，那么这种等待时间实在让我没法接受。学习 Lisp 和它的方言版本 Emacs Lisp，也该早日提上日程。</p>`,36))])}const k=a(r,[["render",d]]),g=JSON.parse('{"path":"/tools/note/Emacs%20%E5%85%A5%E9%97%A8(2).html","title":"Emacs 入门(2)","lang":"zh-CN","frontmatter":{"title":"Emacs 入门(2)","date":"2025-10-20T00:00:00.000Z","tags":["编辑器","Emacs"],"category":["代码效率"],"description":"学习 Rahul 的 Compiling Emacs 30.1 from the source on Debian 教程，尝试在本地编译 Emacs 30.2 。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Emacs 入门(2)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-10-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-24T23:39:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"庸碌无常\\",\\"url\\":\\"https://pluinyiasnhg.top\\"}]}"],["meta",{"property":"og:url","content":"https://pluinyiasnhg.top/tools/note/Emacs%20%E5%85%A5%E9%97%A8(2).html"}],["meta",{"property":"og:site_name","content":"庸碌无常的博客"}],["meta",{"property":"og:title","content":"Emacs 入门(2)"}],["meta",{"property":"og:description","content":"学习 Rahul 的 Compiling Emacs 30.1 from the source on Debian 教程，尝试在本地编译 Emacs 30.2 。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-24T23:39:03.000Z"}],["meta",{"property":"article:tag","content":"Emacs"}],["meta",{"property":"article:tag","content":"编辑器"}],["meta",{"property":"article:published_time","content":"2025-10-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-24T23:39:03.000Z"}]]},"git":{"createdTime":1760970316000,"updatedTime":1761349143000,"contributors":[{"name":"pluinyiasnhg","username":"pluinyiasnhg","email":"pluinyiasnhg@gmail.com","commits":2,"url":"https://github.com/pluinyiasnhg"}]},"readingTime":{"minutes":3.84,"words":1151},"filePathRelative":"tools/note/Emacs 入门(2).md","excerpt":"\\n<p>学习 Rahul 的 <a href=\\"https://www.rahuljuliato.com/posts/compiling_emacs_30_1\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Compiling Emacs 30.1 from the source on Debian</a> 教程，尝试在本地编译 Emacs 30.2 。</p>\\n","autoDesc":true}');export{k as comp,g as data};
